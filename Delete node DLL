class Node:
    def __init__(self, data):  # Doubly Linked List Node
        self.data = data
        self.next = None
        self.prev = None

class Solution:
    def delete_node(self, head, x):
        # If the node to be deleted is the head node
        if x == 1:
            if head.next:
                head = head.next
                head.prev = None
            else:
                head = None
            return head

        curr = head
        count = 1

        # Traverse to the x-th node
        while curr and count < x:
            curr = curr.next
            count += 1

        if not curr:
            return head  # position x is out of bounds (shouldn't happen due to constraints)

        # Remove the node
        if curr.prev:
            curr.prev.next = curr.next
        if curr.next:
            curr.next.prev = curr.prev

        return head
